---
name: CI
on: [push, pull_request, workflow_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  FORCE_COLOR: "1"
defaults:
  run:
    shell: bash
jobs:
  build-package:
    runs-on: ubuntu-latest
    outputs:
      wheel-name: ${{ steps.build-package.outputs.wheel-name }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build package
        id: build-package
        uses: ./.github/actions/build-package
  test:
    needs: build-package
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ["3.10"]
        include:
          - { os: ubuntu-latest, python-version: "3.9" }
          - os: ubuntu-latest
            python-version: "3.11"
            python-install-version: 3.11-dev
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
      - name: Download pre-built wheel
        uses: actions/download-artifact@v3
        id: download-wheel
        with:
          name: ${{ needs.build-package.outputs.wheel-name }}
          path: ./dist
      - name: Prepare environment
        uses: ./.github/actions/prepare-ci
      - name: Run tests (latest)
        run: >-
          nox
          --error-on-missing-interpreters
          --force-python ${{ matrix.python-version }}
          -s 'test-${{ matrix.python-version }}(latest)'
          -- '${{ steps.download-wheel.outputs.download-path }}/${{ needs.build-package.outputs.wheel-name }}'
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
      - name: Run tests (minimum versions)
        run: >-
          nox
          --error-on-missing-interpreters
          --force-python ${{ matrix.python-version }}
          -s 'test-${{ matrix.python-version }}(minimum-versions)'
          -- '${{ steps.download-wheel.outputs.download-path }}/${{ needs.build-package.outputs.wheel-name }}'
  type-check:
    needs: build-package
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ["3.10"]
        include:
          - { os: ubuntu-latest, python-version: "3.9" }
          - os: ubuntu-latest
            python-version: "3.11"
            python-install-version: 3.11-dev
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
      - name: Download pre-built wheel
        uses: actions/download-artifact@v3
        id: download-wheel
        with:
          name: ${{ needs.build-package.outputs.wheel-name }}
          path: ./dist
      - name: Prepare environment
        uses: ./.github/actions/prepare-ci
      - name: Install Node 16 for Pyright
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Type check
        run: >-
          nox
          --error-on-missing-interpreters
          --force-python ${{ matrix.python-version }}
          -s type_check
          -- '${{ steps.download-wheel.outputs.download-path }}/${{ needs.build-package.outputs.wheel-name }}'
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
      - name: Install nox
        run: pipx install nox
      - name: Install Node 16 for Prettier
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Check code formatting
        run: nox -s format -- --check
