---
name: Create instawow executables
on: [push, workflow_dispatch]
env:
  FORCE_COLOR: "1"
defaults:
  run:
    shell: bash
jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      instawow-version: ${{ steps.get-version.outputs.INSTAWOW_VERSION }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dunamai
        run: python -m pip install dunamai
      - name: Grab the version
        id: get-version
        run: echo "::set-output name=INSTAWOW_VERSION::$(dunamai from git --no-metadata)"
  freeze-cli:
    needs: get-version
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install nox
        run: python -m pip install nox
      - name: Freeze the CLI
        run: nox -s freeze_cli
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: instawow-cli-${{ needs.get-version.outputs.instawow-version }}-${{ matrix.os }}
          path: ./dist/instawow-standalone
  freeze-gui:
    needs: get-version
    strategy:
      matrix:
        build-env:
          - os: macos-latest
            python-version: "3.10"
            briefcase-build-opts: ""
            briefcase-package-opts: "--no-sign"
          - os: ubuntu-18.04
            python-version: "3.9"
            briefcase-build-opts: "--no-docker"
            briefcase-package-opts: ""
          - os: windows-latest
            python-version: "3.10"
            briefcase-build-opts: ""
            briefcase-package-opts: ""
      fail-fast: false
    runs-on: ${{ matrix.build-env.os }}
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install briefcase Linux dependencies
        run: sudo apt-get update --fix-missing && sudo apt-get install -y
          patchelf pkgconf
          libgtk-3-dev libwebkit2gtk-4.0-dev
          libgirepository1.0-dev gir1.2-javascriptcoregtk-4.0 gir1.2-webkit2-4.0
        if: matrix.build-env.os == 'ubuntu-18.04'
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.build-env.python-version }}
      - name: Install Nox
        run: python -m pip install nox
      - name: Bundle the frontend
        run: nox -s bundle_frontend
      - name: Bundle WebView2 libraries
        run: nox -s bundle_webview2_libs
        if: matrix.build-env.os == 'windows-latest'
      - name: Patch in the version number
        run: sed -i.bak
          's/version = "0.0.0"/version = "${{ needs.get-version.outputs.instawow-version }}"/'
          pyproject.toml
        working-directory: gui-webview
      - name: Install and run briefcase
        run: |
          python -m pip install 'briefcase @ git+https://github.com/layday/briefcase@instawow'
          python -m briefcase build ${{ matrix.build-env.briefcase-build-opts }}
          python -m briefcase package ${{ matrix.build-env.briefcase-package-opts }} | tee >(
              echo "INSTAWOW_ARTIFACT_PATH=gui-webview/$(tail -n 1 | cut -c 33-)" >> $GITHUB_ENV
            )
        env:
          DEPLOY_GTK_VERSION: 3
        working-directory: gui-webview
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: instawow-gui-${{ needs.get-version.outputs.instawow-version }}-${{ matrix.build-env.os }}
          path: ${{ env.INSTAWOW_ARTIFACT_PATH }}
  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [freeze-cli, freeze-gui]
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v2
        with:
          path: release-assets
      - name: Zip up CLI directories
        run: |
          set +x

          for d in instawow-cli-*
          do
              zip -r "${d%/}.zip" "$d"
          done
        working-directory: release-assets
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            release-assets/instawow-cli-*.zip
            release-assets/instawow-gui-*/*
